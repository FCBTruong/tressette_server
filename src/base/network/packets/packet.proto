syntax = "proto3";

message Empty {
}

message Packet {
  string token = 1;
  int32 cmd_id = 2;        // CMD ID
  bytes payload = 3;       // Generic payload (serialized message)
}

message ChatMessage {
  double abc = 1;
  string username = 2;     // User's name
  int64 level = 3;        // Level (using uint32 for single-byte values)
  int32 gold = 4;         // Gold (using int32)
  string abcd = 5;      // Chat message
  bool is_active = 6;
}


message PingPong {
  
}

message Login {
  int32 uid = 1;
}

message LoginResponse {
  int32 uid = 1;
  string token = 2;
}

message UserInfo {
  int32 uid = 1;
  string name = 2;
  int64 gold = 3;
  repeated int32 scores = 4;
  repeated string names = 5;
  int32 abc = 6;
}

message GameInfo {
  int32 match_id = 1;
  int32 game_mode = 2;
  int32 player_mode = 3;
  repeated int32 uids = 4;
  repeated int64 user_golds = 5;
  repeated string user_names = 6;
  repeated int32 cards_compare = 7;
  int32 current_turn = 8;
  int32 game_state = 9;
  repeated int32 my_cards = 10;
  int32 remain_cards = 11;
  repeated int32 user_points = 12;
  repeated int32 team_ids = 13;
  int32 hand_suit = 14;
}

message LeaveGame {
  int32 status = 1;
}

message NewUserJoinMatch {
  int32 uid = 1;
  int32 gold = 2;
  string name = 3;
  int32 seat_server = 4;
  int32 team_id = 5;
}

message UserLeaveMatch {
  int32 uid = 1;
}

message DealCard {
  repeated int32 cards = 1;
  int32 remain_cards = 2;
}

message PlayCard {
  int32 uid = 1;
  int32 card_id = 2;
  bool auto = 3;
  int32 current_turn = 4;
  int32 hand_suit = 5;
}

message StartGame {

}

message NewHand {
  int32 current_turn = 1;
  repeated int32 my_cards = 2;
}

message UpdateGamePoint {
  repeated int32 points = 1;
}

message EndHand {
  int32 win_uid = 1;
  int32 win_card = 2;
  repeated int32 user_points = 3;
}

message DrawCard {
  repeated int32 cards = 1;
}

message GeneralInfo {
  int64 timestamp = 1;
}

message EndGame {
  repeated int32 win_uids = 1;
  repeated int32 score_cards = 2;
  repeated int32 score_last_tricks = 3;
  repeated int32 score_totals = 4;
}

message PrepareStartGame {
  int32 time_start = 1;
}